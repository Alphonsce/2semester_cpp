#include <iostream>

// Суть в том, что массив - это всего лишь адрес ячейки памяти элемента с 0 индексом

// Объявление указателей происходит так же, как объявление ссылки: int* a - тип указателя на инт

// Существуют операторы & и * - они используются уже для объявленных переменных,
// & - получение адреса ячейки памяти, * - получения значения из ячейки памяти

// *(arr + 1) то же самое что arr[1], так как arr - это адрес ячейки памяти, * мы вызываем значение лежащее в следующей ячейке

// Ссылка - это постоянный указатель, как только мы сказали, что a - ссылка на b, a всегда будет оставаться ссылкой на данную ячейку памяти

// Указатель - это именно переменная, содержащая адрес ячейки памяти

void PrintByPointer(int n, int *arr)
{
    for (int i = 0; i < n; i++)
    {
        std::cout << *(arr + i);
    }
    std::cout << std::endl;
}

void PrintByReference(int n, int (&arr)[3])
{
    for (int i = 0; i < n; i++)
    {
        std::cout << *(arr + i);
    }
    std::cout << std::endl;
}

int main()
{
    using namespace std;

    int a = 5;
    int arr[] = {3, 2, 1};
    
    //PrintByPointer(3, arr);
    PrintByReference(3, arr);

    return 0; 
}
